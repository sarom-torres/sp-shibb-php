#!/usr/bin/env bash

# author: Allex Magno Andrade
# describe: Container Shibboleth-SP v2.6.0
# version: 0.1
# license: MIT license

clear

echo "========================================================================="
echo -e "				\033[01;34mGId\033[01;37mLab\033[00m"
echo "	LABORATÓRIO PARA EXPERIMENTAÇÃO EM  GESTÃO DE IDENTIDADES		"
echo "========================================================================="


function ctrl_c {
	echo -e "\n\033[01;31mVocê digitou CTRL C.\033[00;37m\nAs informações serão perdidas"
	echo ""
	echo  "Deseja realmente cancelar a instalação?"
	decisao
	if [ "$?" == 1 ]; then
		exit
	else
		for i in 0 1 2 3 4 5 6 7; do
			tput cuu1; tput dl1
		done
		echo -n ">> "
	fi
}
function decisao(){
	echo -e "(\033[01ms\033[00m)	SIM\n(\033[01mENTER\033[00m)	NÃO"
	while [ true ]; do
		read -p ">> " decisao
		case $decisao in
			s) return 1;;
			"") return 0;;	
			*) echo -e " \033[01;31mDigite apenas s ou Enter\033[00m";;
		esac
	done
}
function confirmar(){
	echo -e "Você digitou: \033[01;33m$1\033[01;37m\nDesejesa alterar?\033[00m"
}
function validar(){
	if [ -z "$1" ]; then
		echo -e "\033[01;31m*Campo Obrigatório!\033[00m"
		return 0
	else
		return 1
	fi
}
function conf_apache(){
while [ true ]; do
	echo "Caminho absoluto do certificado e chave\nExemplo: /etc/ssl/certs"
	read -p ">> " _CERTPATH
	validar $_CERTPATH
	if [ "$?" == 1 ]; then
		confirmar $_CERTPATH
		decisao
		if [ "$?" == 0 ]; then
			break
		fi
	fi
done
while [ true ]; do
	echo "Nome do arquivo .cer ou .crt\nExemplo: certs/cert.crt"
	read -p ">> " _CER
	validar $_CER
	if [ "$?" == 1 ]; then
		confirmar $_CER
		decisao
		if [ "$?" == 0 ]; then
			break
		fi
	fi
done
while [ true ]; do
	echo "Caminho absoluto da chave\nExemplo: /etc/ssl/private"
	read -p ">> " _KEYPATH
	validar $_KEYPATH
	if [ "$?" == 1 ]; then
		confirmar $_KEYPATH
		decisao
		if [ "$?" == 0 ]; then
			break
		fi
	fi
done
while [ true ]; do
	echo "Nome da chave \"KeyFile\" .key\nExemplo: cert.key"
	read -p ">> " _KEY
	validar $_KEY
	if [ "$?" == 1 ]; then
		confirmar $_KEY
		decisao
		if [ "$?" == 0 ]; then
			break
		fi
	fi
done

_APACHE=1

sed -i "s|shibServerName|$1|g" ./src/apache2/shib_ssl.conf
sed -i "s|certPathcrtFile|$_CERTPATH/$_CER|g" ./src/apache2/shib_ssl.conf
sed -i "s|keyPathkeyFile|$_KEYPATH/$_KEY|g" ./src/apache2/shib_ssl.conf

}
function install_docker(){
	curl -fsSl https://get.docker.com | bash
	docker version
	echo -e "\033[01;32m Docker latest instalado com sucesso!\033[00m"
}

_ex_host=$"host.rnp.br"
_ex_home=$"https://host.rnp.br/users"
_DS="https://ds.cafeexpresso.rnp.br/WAYF.php"

if [ "$EUID" -ne 0 ]
  then echo "Execute como root"
  exit
fi


trap ctrl_c SIGINT

echo -e "\n\n			\033[01;04;33mContainer Shibboleth SP\033[00;37m"

echo ""
echo -e "\033[31mPara sair precione CTRL C a qualquer momento\033[00m"
echo ""

echo "Deseja instalar o Docker?"
decisao
if [ "$?" -eq 1 ]; then
	install_docker
fi

echo "Deseja inserir um nome de domínio?"
decisao
if [ "$?" -eq 1 ]; then
	
	while [ true ]; do
		echo  -e "Qual o domínio?\nExemplo: $_ex_host"
		read -p ">> " _DNS
		validar $_DNS
		if [ "$?" == 1 ]; then
			confirmar $_DNS
			decisao
			if [ "$?" == 0 ]; then
				break
			fi
		fi
	done

else

	while [ true ]; do
		echo  -e "Qual o IP?"
		read -p ">> " _DNS
		validar $_DNS
		if [ "$?" == 1 ]; then
			confirmar $_DNS
			decisao
			if [ "$?" == 0 ]; then
				break
			fi
		fi
	done
fi


while [ true ]; do
	echo  -e "Forneça um e-mail para contato técnico"
	read -p ">> " _SUPPORT
	validar $_SUPPORT
	if [ "$?" == 1 ]; then
		confirmar $_SUPPORT
		decisao
		if [ "$?" == 0 ]; then
			break
		fi
	fi
done
while [ true ]; do
	echo  -e "Nome do contato técnico"
	read -p ">> " _GIVENNAME
	validar $_GIVENNAME
	if [ "$?" == 1 ]; then
		confirmar $_GIVENNAME
		decisao
		if [ "$?" == 0 ]; then
			break
		fi
	fi
done
while [ true ]; do
	echo  -e "Sobrenome do contato técnico"
	read -p ">> " _SURNAME
	validar $_SURNAME
	if [ "$?" == 1 ]; then
		confirmar $_SURNAME
		decisao
		if [ "$?" == 0 ]; then
			break
		fi
	fi
done

sed -i "s|supportPersonName|${_GIVENNAME}|g" ./src/shibboleth/shibboleth2.xml
sed -i "s|testSurName|${_SURNAME}|g" ./src/shibboleth/shibboleth2.xml
sed -i "s|supportmail|${_SUPPORT}|g" ./src/shibboleth/shibboleth2.xml

echo "Montando..."
touch ./src/shibboleth/certificado.cnf

echo "Deseja configurar modo SSL no apache?"
decisao
if [ "$?" == 1 ]; then
	conf_apache $_DNS
	_ENTITYID="https://${_DNS}"
else
	_APACHE=0
	_ENTITYID="http://${_DNS}"
fi

sed -i "s|shibServerEntityID|${_ENTITYID}|g" ./src/shibboleth/shibboleth2.xml

cat > ./src/shibboleth/certificado.cnf <<-EOF
[req]
prompt=no
default_bits=2048
encrypt_key=no
default_md=sha1
distinguished_name=dn
# PrintableStrings only
string_mask=MASK:0002
x509_extensions=ext

default_keyfile=${PWD}/src/shibboleth/sp-key.pem

[dn]
CN=${_DNS}

[ext]
subjectAltName= DNS.1:${_DNS} \\
                URI.1:${_ENTITYID}
subjectKeyIdentifier=hash
EOF
echo "Criando certificados"
openssl req -new -x509 -config ${PWD}/src/shibboleth/certificado.cnf -text -out ${PWD}/src/shibboleth/sp-cert.pem -days 1096


if [ $_APACHE -eq 1 ]; then

echo "VOLUME [\"$_CERTPATH\"]
VOLUME [\"$_KEYPATH\"]
VOLUME [\"/volume\"]


COPY ./src/apache2/shib_ssl.conf /volume/shib_ssl.conf

RUN ln -s /volume/shib_ssl.conf /etc/apache2/sites-available/shib_ssl.conf
RUN /usr/sbin/a2ensite shib_ssl.conf
RUN /usr/sbin/a2enmod ssl

EXPOSE 443


" >> Dockerfile

fi

echo "Criando a imagem..."

docker build -t shibboleth-sp .
if [ $_APACHE -eq 1 ]; then

	docker run -d -p 80:80 -p 443:443 --volume=$_CERTPATH:$_CERTPATH --volume=$_KEYPATH:$_KEYPATH --volume=${PWD}/src/shibboleth:/etc/shibboleth --name=shib shibboleth-sp && docker ps

else
	docker run -d -p 80:80 --volume=${PWD}/src/shibboleth:/etc/shibboleth --name=shib shibboleth-sp && docker ps
fi



echo "############################################################################"
echo "			Instalação concluída			 "
echo "############################################################################"
